version: '3.9'

x-db-list: &db_list auth_service_db,main_service_db,scrim_service_db,team_service_db,user_service_db,tournament_service_db,notification_service_db,ranking_service_db

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_MULTIPLE_DATABASES: *db_list
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - microservices-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  db-init:
    image: postgres:14
    entrypoint: [ "/bin/bash", "/init/ensure-databases.sh" ]
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGPASSWORD: postgres
      POSTGRES_MULTIPLE_DATABASES: *db_list
    volumes:
      - ./init-scripts/ensure-databases.sh:/init/ensure-databases.sh:ro
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - microservices-network


  # Eureka Server
  eureka-server:
    build: ./eureka-server
    container_name: eureka-server
    ports:
      - "8761:8761"
    networks:
      - microservices-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8761/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Gateway
  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    ports:
      - "8080:8080"
    environment:
      - EUREKA_SERVER_URL=http://eureka-server:8761/eureka/
    depends_on:
      eureka-server:
        condition: service_healthy
    networks:
      - microservices-network

  # Auth Service
  auth-service:
    build: ./auth-service
    container_name: auth-service
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/auth_service_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - EUREKA_SERVER_URL=http://eureka-server:8761/eureka/
    depends_on:
      postgres:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    networks:
      - microservices-network

  # User Service
  user-service:
    build: ./user-service
    container_name: user-service
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/user_service_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - EUREKA_SERVER_URL=http://eureka-server:8761/eureka/
    depends_on:
      postgres:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    networks:
      - microservices-network

  # Team Service
  team-service:
    build: ./team-service
    container_name: team-service
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/team_service_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - EUREKA_SERVER_URL=http://eureka-server:8761/eureka/
    depends_on:
      postgres:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    networks:
      - microservices-network

  # Main Service
  main-service:
    build: ./main-service
    container_name: main-service
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/main_service_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - EUREKA_SERVER_URL=http://eureka-server:8761/eureka/
    depends_on:
      postgres:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    networks:
      - microservices-network

  # Scrim Service
  scrim-service:
    build: ./scrim-service
    container_name: scrim-service
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/scrim_service_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - EUREKA_SERVER_URL=http://eureka-server:8761/eureka/
    depends_on:
      postgres:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    networks:
      - microservices-network


  tournament-service:
    build: ./tournament-service
    container_name: tournament-service
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/tournament_service_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - EUREKA_SERVER_URL=http://eureka-server:8761/eureka/
    depends_on:
      postgres:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    networks:
      - microservices-network

  notification-service:
    build: ./notification-service
    container_name: notification-service
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/notification_service_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - EUREKA_SERVER_URL=http://eureka-server:8761/eureka/
      - MAIL_HOST=smtp.gmail.com
      - MAIL_PORT=587
      - MAIL_USERNAME=gptmail2212@gmail.com
      - MAIL_PASSWORD=dvqjthgoagxwrtfv
    depends_on:
      postgres:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    networks:
      - microservices-network

  ranking-service:
    build: ./ranking-service
    container_name: ranking-service
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/ranking_service_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - EUREKA_SERVER_URL=http://eureka-server:8761/eureka/
    depends_on:
      postgres:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge

volumes:
  postgres-data: